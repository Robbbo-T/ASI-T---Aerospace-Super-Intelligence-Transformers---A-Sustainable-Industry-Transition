name: integration-tests
on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths: ['services/**', 'clients/**', 'proto/**']

jobs:
  itest:
    runs-on: ubuntu-latest
    services:
      kafka:
        image: bitnami/kafka:3.7
        env:
          KAFKA_ENABLE_KRAFT: yes
          KAFKA_CFG_PROCESS_ROLES: broker,controller
          KAFKA_CFG_NODE_ID: 1
          KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
          KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
          KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
          KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
        ports: [ '9092:9092' ]
      postgres:
        image: postgres:16-alpine
        env: { POSTGRES_PASSWORD: aqua, POSTGRES_USER: aqua, POSTGRES_DB: aqua }
        ports: [ '5432:5432' ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with: { distribution: temurin, java-version: '21', cache: 'gradle' }
      - name: Build Java service
        working-directory: services/controlplane-java
        run: ./gradlew --no-daemon build
      - uses: actions/setup-dotnet@v4
        with: { dotnet-version: '8.0.x' }
      - name: Build .NET agent
        run: dotnet build clients/dotnet/device-agent/DeviceAgent.sln -c Release
      - name: Smoke run (server & client)
        run: |
          # Start server in background
          (cd services/controlplane-java && java -jar build/libs/controlplane-java-0.1.0-SNAPSHOT.jar &) 
          # Wait until gRPC port is open (max 30s)
          timeout 30 bash -c 'until (echo > /dev/tcp/127.0.0.1/9090) 2>/dev/null; do sleep 1; done'
          CONTROLPLANE_ADDR=http://localhost:9090 dotnet run --project clients/dotnet/device-agent/DeviceAgent/DeviceAgent.csproj