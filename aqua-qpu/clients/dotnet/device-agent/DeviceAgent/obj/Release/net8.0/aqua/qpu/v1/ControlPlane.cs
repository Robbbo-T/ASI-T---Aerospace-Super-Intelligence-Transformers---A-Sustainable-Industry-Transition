// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: aqua/qpu/v1/control_plane.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Aqua.Qpu.V1 {

  /// <summary>Holder for reflection information generated from aqua/qpu/v1/control_plane.proto</summary>
  public static partial class ControlPlaneReflection {

    #region Descriptor
    /// <summary>File descriptor for aqua/qpu/v1/control_plane.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ControlPlaneReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9hcXVhL3FwdS92MS9jb250cm9sX3BsYW5lLnByb3RvEgthcXVhLnFwdS52",
            "MRobZ29vZ2xlL3Byb3RvYnVmL2VtcHR5LnByb3RvGh9nb29nbGUvcHJvdG9i",
            "dWYvdGltZXN0YW1wLnByb3RvIkMKC0JpYXNDb21tYW5kEg8KB2NoYW5uZWwY",
            "ASABKAkSDQoFdm9sdHMYAiABKAESFAoMc2xld19WX3Blcl9zGAMgASgBItgC",
            "CgtEZXZpY2VTdGF0ZRIRCglkZXZpY2VfaWQYASABKAkSFQoNdGVtcGVyYXR1",
            "cmVfSxgCIAEoARIYChBtYWduZXRpY19maWVsZF9UGAMgASgBEhEKCXZhY3V1",
            "bV9QYRgEIAEoARI0CgZhbmFsb2cYBSADKAsyJC5hcXVhLnFwdS52MS5EZXZp",
            "Y2VTdGF0ZS5BbmFsb2dFbnRyeRI0CgZzdGF0dXMYBiADKAsyJC5hcXVhLnFw",
            "dS52MS5EZXZpY2VTdGF0ZS5TdGF0dXNFbnRyeRIoCgR0aW1lGAcgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBotCgtBbmFsb2dFbnRyeRILCgNr",
            "ZXkYASABKAkSDQoFdmFsdWUYAiABKAE6AjgBGi0KC1N0YXR1c0VudHJ5EgsK",
            "A2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEyjQEKDENvbnRyb2xQbGFu",
            "ZRI8CghHZXRTdGF0ZRIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoYLmFxdWEu",
            "cXB1LnYxLkRldmljZVN0YXRlEj8KCUFwcGx5QmlhcxIYLmFxdWEucXB1LnYx",
            "LkJpYXNDb21tYW5kGhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5KAFCIQoPY29t",
            "LmFxdWEucXB1LnYxUAGqAgtBcXVhLlFwdS5WMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Aqua.Qpu.V1.BiasCommand), global::Aqua.Qpu.V1.BiasCommand.Parser, new[]{ "Channel", "Volts", "SlewVPerS" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Aqua.Qpu.V1.DeviceState), global::Aqua.Qpu.V1.DeviceState.Parser, new[]{ "DeviceId", "TemperatureK", "MagneticFieldT", "VacuumPa", "Analog", "Status", "Time" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Commands from CB->QB for trap biasing
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class BiasCommand : pb::IMessage<BiasCommand>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BiasCommand> _parser = new pb::MessageParser<BiasCommand>(() => new BiasCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BiasCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Aqua.Qpu.V1.ControlPlaneReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BiasCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BiasCommand(BiasCommand other) : this() {
      channel_ = other.channel_;
      volts_ = other.volts_;
      slewVPerS_ = other.slewVPerS_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BiasCommand Clone() {
      return new BiasCommand(this);
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 1;
    private string channel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "volts" field.</summary>
    public const int VoltsFieldNumber = 2;
    private double volts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Volts {
      get { return volts_; }
      set {
        volts_ = value;
      }
    }

    /// <summary>Field number for the "slew_V_per_s" field.</summary>
    public const int SlewVPerSFieldNumber = 3;
    private double slewVPerS_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double SlewVPerS {
      get { return slewVPerS_; }
      set {
        slewVPerS_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BiasCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BiasCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Channel != other.Channel) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Volts, other.Volts)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SlewVPerS, other.SlewVPerS)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (Volts != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Volts);
      if (SlewVPerS != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SlewVPerS);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Channel.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Channel);
      }
      if (Volts != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Volts);
      }
      if (SlewVPerS != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(SlewVPerS);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Channel.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Channel);
      }
      if (Volts != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Volts);
      }
      if (SlewVPerS != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(SlewVPerS);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (Volts != 0D) {
        size += 1 + 8;
      }
      if (SlewVPerS != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BiasCommand other) {
      if (other == null) {
        return;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.Volts != 0D) {
        Volts = other.Volts;
      }
      if (other.SlewVPerS != 0D) {
        SlewVPerS = other.SlewVPerS;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Channel = input.ReadString();
            break;
          }
          case 17: {
            Volts = input.ReadDouble();
            break;
          }
          case 25: {
            SlewVPerS = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Channel = input.ReadString();
            break;
          }
          case 17: {
            Volts = input.ReadDouble();
            break;
          }
          case 25: {
            SlewVPerS = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Telemetry/state for the device
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeviceState : pb::IMessage<DeviceState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceState> _parser = new pb::MessageParser<DeviceState>(() => new DeviceState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeviceState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Aqua.Qpu.V1.ControlPlaneReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceState(DeviceState other) : this() {
      deviceId_ = other.deviceId_;
      temperatureK_ = other.temperatureK_;
      magneticFieldT_ = other.magneticFieldT_;
      vacuumPa_ = other.vacuumPa_;
      analog_ = other.analog_.Clone();
      status_ = other.status_.Clone();
      time_ = other.time_ != null ? other.time_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceState Clone() {
      return new DeviceState(this);
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private string deviceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "temperature_K" field.</summary>
    public const int TemperatureKFieldNumber = 2;
    private double temperatureK_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TemperatureK {
      get { return temperatureK_; }
      set {
        temperatureK_ = value;
      }
    }

    /// <summary>Field number for the "magnetic_field_T" field.</summary>
    public const int MagneticFieldTFieldNumber = 3;
    private double magneticFieldT_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MagneticFieldT {
      get { return magneticFieldT_; }
      set {
        magneticFieldT_ = value;
      }
    }

    /// <summary>Field number for the "vacuum_Pa" field.</summary>
    public const int VacuumPaFieldNumber = 4;
    private double vacuumPa_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double VacuumPa {
      get { return vacuumPa_; }
      set {
        vacuumPa_ = value;
      }
    }

    /// <summary>Field number for the "analog" field.</summary>
    public const int AnalogFieldNumber = 5;
    private static readonly pbc::MapField<string, double>.Codec _map_analog_codec
        = new pbc::MapField<string, double>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForDouble(17, 0D), 42);
    private readonly pbc::MapField<string, double> analog_ = new pbc::MapField<string, double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, double> Analog {
      get { return analog_; }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 6;
    private static readonly pbc::MapField<string, string>.Codec _map_status_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 50);
    private readonly pbc::MapField<string, string> status_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Status {
      get { return status_; }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeviceState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeviceState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceId != other.DeviceId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TemperatureK, other.TemperatureK)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MagneticFieldT, other.MagneticFieldT)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(VacuumPa, other.VacuumPa)) return false;
      if (!Analog.Equals(other.Analog)) return false;
      if (!Status.Equals(other.Status)) return false;
      if (!object.Equals(Time, other.Time)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (TemperatureK != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TemperatureK);
      if (MagneticFieldT != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MagneticFieldT);
      if (VacuumPa != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(VacuumPa);
      hash ^= Analog.GetHashCode();
      hash ^= Status.GetHashCode();
      if (time_ != null) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeviceId);
      }
      if (TemperatureK != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(TemperatureK);
      }
      if (MagneticFieldT != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(MagneticFieldT);
      }
      if (VacuumPa != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(VacuumPa);
      }
      analog_.WriteTo(output, _map_analog_codec);
      status_.WriteTo(output, _map_status_codec);
      if (time_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeviceId);
      }
      if (TemperatureK != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(TemperatureK);
      }
      if (MagneticFieldT != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(MagneticFieldT);
      }
      if (VacuumPa != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(VacuumPa);
      }
      analog_.WriteTo(ref output, _map_analog_codec);
      status_.WriteTo(ref output, _map_status_codec);
      if (time_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (TemperatureK != 0D) {
        size += 1 + 8;
      }
      if (MagneticFieldT != 0D) {
        size += 1 + 8;
      }
      if (VacuumPa != 0D) {
        size += 1 + 8;
      }
      size += analog_.CalculateSize(_map_analog_codec);
      size += status_.CalculateSize(_map_status_codec);
      if (time_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeviceState other) {
      if (other == null) {
        return;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.TemperatureK != 0D) {
        TemperatureK = other.TemperatureK;
      }
      if (other.MagneticFieldT != 0D) {
        MagneticFieldT = other.MagneticFieldT;
      }
      if (other.VacuumPa != 0D) {
        VacuumPa = other.VacuumPa;
      }
      analog_.MergeFrom(other.analog_);
      status_.MergeFrom(other.status_);
      if (other.time_ != null) {
        if (time_ == null) {
          Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Time.MergeFrom(other.Time);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceId = input.ReadString();
            break;
          }
          case 17: {
            TemperatureK = input.ReadDouble();
            break;
          }
          case 25: {
            MagneticFieldT = input.ReadDouble();
            break;
          }
          case 33: {
            VacuumPa = input.ReadDouble();
            break;
          }
          case 42: {
            analog_.AddEntriesFrom(input, _map_analog_codec);
            break;
          }
          case 50: {
            status_.AddEntriesFrom(input, _map_status_codec);
            break;
          }
          case 58: {
            if (time_ == null) {
              Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Time);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DeviceId = input.ReadString();
            break;
          }
          case 17: {
            TemperatureK = input.ReadDouble();
            break;
          }
          case 25: {
            MagneticFieldT = input.ReadDouble();
            break;
          }
          case 33: {
            VacuumPa = input.ReadDouble();
            break;
          }
          case 42: {
            analog_.AddEntriesFrom(ref input, _map_analog_codec);
            break;
          }
          case 50: {
            status_.AddEntriesFrom(ref input, _map_status_codec);
            break;
          }
          case 58: {
            if (time_ == null) {
              Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Time);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
