name: Quantum Layers Check

on:
  push:
    branches: [ main, develop, "copilot/**" ]
  pull_request:
    branches: [ main ]

jobs:
  quantum-classical-bridge:
    runs-on: ubuntu-latest
    name: Verify Quantum-Classical Bridge Architecture
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Check quantum layers presence
        run: |
          echo "üîç Checking quantum-classical bridge layers..."
          
          missing_layers=()
          
          # Check for quantum layers in at least one domain
          if [ -d "2-DOMAINS-LEVELS" ]; then
            for domain in 2-DOMAINS-LEVELS/*/; do
              domain_name=$(basename "$domain")
              if [[ "$domain_name" != "_*" ]]; then
                echo "Checking $domain_name..."
                
                # Check required quantum layers
                for layer in "BITS/CB" "QUBITS/QB" "ELEMENTS/UE" "ELEMENTS/FE" "WAVES/FWD" "STATES/QS"; do
                  if [ ! -d "$domain/TFA/$layer" ]; then
                    missing_layers+=("$domain_name:TFA/$layer")
                  fi
                done
              fi
            done
          fi
          
          if [ ${#missing_layers[@]} -gt 0 ]; then
            echo "‚ùå Missing quantum-classical bridge components:"
            printf '%s\n' "${missing_layers[@]}"
            exit 1
          fi
          
          echo "‚úÖ Quantum-classical bridge architecture verified"
          
      - name: Verify code implementation buckets
        run: |
          echo "üîç Checking Python implementation buckets..."
          
          buckets=(
            "5-ARTIFACTS-IMPLEMENTATION/CODE/python/classical-bits"
            "5-ARTIFACTS-IMPLEMENTATION/CODE/python/quantum-qubits"
            "5-ARTIFACTS-IMPLEMENTATION/CODE/python/unit-elements"
            "5-ARTIFACTS-IMPLEMENTATION/CODE/python/federation-elements"
            "5-ARTIFACTS-IMPLEMENTATION/CODE/python/wave-dynamics"
          )
          
          missing_buckets=()
          for bucket in "${buckets[@]}"; do
            if [ ! -d "$bucket" ]; then
              missing_buckets+=("$bucket")
            fi
          done
          
          if [ ${#missing_buckets[@]} -gt 0 ]; then
            echo "‚ùå Missing implementation buckets:"
            printf '%s\n' "${missing_buckets[@]}"
            exit 1
          fi
          
          echo "‚úÖ All implementation buckets present"
          
      - name: Scan for forbidden terminology  
        run: |
          echo "üîç Scanning for forbidden terminology..."
          
          # Check for "Fine Element" instead of "Federation Element"
          fine_element_files=$(grep -r "Fine Element" --include="*.md" --include="*.yaml" --include="*.yml" --include="*.json" . || true)
          if [ -n "$fine_element_files" ]; then
            echo "‚ùå Found 'Fine Element' - must be 'Federation Element':"
            echo "$fine_element_files"
            exit 1
          fi
          
          # Check for "Station Envelop" instead of "Station Envelope"  
          envelop_files=$(grep -r "Station Envelop[^e]" --include="*.md" --include="*.yaml" --include="*.yml" --include="*.json" . || true)
          if [ -n "$envelop_files" ]; then
            echo "‚ùå Found 'Station Envelop' - must be 'Station Envelope':"
            echo "$envelop_files" 
            exit 1
          fi
          
          echo "‚úÖ No forbidden terminology detected"